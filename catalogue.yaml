- name: configure catalogue component
  hosts: catalogue
  become: yes
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  
  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present
  
  - name: create system user
    ansible.builtin.user:
      name: roboshop
      system: true
      shell: /sbin/nologin
      home: /app
  
  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory
  
  - name: download catalogue code
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
      dest: /tmp/catalogue.zip

  - name: unzip the catalogue component
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    community.general.npm:
      path: /app
  
  - name: settingup a systemd service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: deamon-reload 
    ansible.builtin.systemd_service:
      daemon_reload: true
  
  - name: enable & start the catalogue 
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes

  - name: copy mongodb repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo
  
  - name: install mongodb client
    ansible.builtin.dnf:
      name: mongodb-mongosh
      state: present

  - name: check whether products loaded 
    ansible.builtin.command: mongosh --host mongodb.buymebot.shop --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
    register: catalogue_output
  
  - name: print catalogue output 
    ansible.builtin.debug:
      msg: "{{ catalogue_output }}"

  - name: load products if not loaded
    ansible.builtin.shell: mongosh --host mongodb.buymebot.shop </app/db/master-data.js
    while: catalogue_output.stdout | int < 0
